// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/pivotal-cf-experimental/mkman/tarball"
)

type FakeTarballReader struct {
	ReadFileStub        func(filename string) ([]byte, error)
	readFileMutex       sync.RWMutex
	readFileArgsForCall []struct {
		filename string
	}
	readFileReturns struct {
		result1 []byte
		result2 error
	}
}

func (fake *FakeTarballReader) ReadFile(filename string) ([]byte, error) {
	fake.readFileMutex.Lock()
	fake.readFileArgsForCall = append(fake.readFileArgsForCall, struct {
		filename string
	}{filename})
	fake.readFileMutex.Unlock()
	if fake.ReadFileStub != nil {
		return fake.ReadFileStub(filename)
	} else {
		return fake.readFileReturns.result1, fake.readFileReturns.result2
	}
}

func (fake *FakeTarballReader) ReadFileCallCount() int {
	fake.readFileMutex.RLock()
	defer fake.readFileMutex.RUnlock()
	return len(fake.readFileArgsForCall)
}

func (fake *FakeTarballReader) ReadFileArgsForCall(i int) string {
	fake.readFileMutex.RLock()
	defer fake.readFileMutex.RUnlock()
	return fake.readFileArgsForCall[i].filename
}

func (fake *FakeTarballReader) ReadFileReturns(result1 []byte, result2 error) {
	fake.ReadFileStub = nil
	fake.readFileReturns = struct {
		result1 []byte
		result2 error
	}{result1, result2}
}

var _ tarball.TarballReader = new(FakeTarballReader)
