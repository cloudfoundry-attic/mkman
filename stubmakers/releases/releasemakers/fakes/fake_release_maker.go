// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry/mkman/stubmakers/releases/releasemakers"
)

type FakeReleaseMaker struct {
	MakeReleaseStub        func() (*releasemakers.Release, error)
	makeReleaseMutex       sync.RWMutex
	makeReleaseArgsForCall []struct{}
	makeReleaseReturns     struct {
		result1 *releasemakers.Release
		result2 error
	}
}

func (fake *FakeReleaseMaker) MakeRelease() (*releasemakers.Release, error) {
	fake.makeReleaseMutex.Lock()
	fake.makeReleaseArgsForCall = append(fake.makeReleaseArgsForCall, struct{}{})
	fake.makeReleaseMutex.Unlock()
	if fake.MakeReleaseStub != nil {
		return fake.MakeReleaseStub()
	} else {
		return fake.makeReleaseReturns.result1, fake.makeReleaseReturns.result2
	}
}

func (fake *FakeReleaseMaker) MakeReleaseCallCount() int {
	fake.makeReleaseMutex.RLock()
	defer fake.makeReleaseMutex.RUnlock()
	return len(fake.makeReleaseArgsForCall)
}

func (fake *FakeReleaseMaker) MakeReleaseReturns(result1 *releasemakers.Release, result2 error) {
	fake.MakeReleaseStub = nil
	fake.makeReleaseReturns = struct {
		result1 *releasemakers.Release
		result2 error
	}{result1, result2}
}

var _ releasemakers.ReleaseMaker = new(FakeReleaseMaker)
